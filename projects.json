[
    {
        "id": 1,
        "title": "Bookstore",
        "details": "HTML, CSS, Bootstrap, Javascript, Google Books API",
        "url": "https://myky123.github.io/book_store/",
        "img": "./images/icons/projects-icons/bookstore.png",
        "description": "This bookstore project lets users search for books, view details, add books to their cart, and see the total price. The cart is saved in session storage, so it remains accessible across pages. Users can also choose from three color themes to customize the site's appearance. The project was created using the Google Books API, JavaScript, HTML, CSS, and Bootstrap. The website is fully responsive and contact form is functional."
    },
    {
        "id": 2,
        "title": "Clear View Project",
        "details": "HTML, CSS, Javascript",
        "url": "https://myky123.github.io/clearView/index.html",
        "img": "./images/icons/projects-icons/clearview.png",
        "description": "Website for a drone window cleaning service. It features a landing page, services page and about page. The website is fully responsive and built with HTML, CSS, and JavaScript. The contact form is fully functional."
    },
    {
        "id": 3,
        "title": "Classic Maze Game",
        "details": "HTML, CSS, JS(object-oriented)",
        "url": "https://myky123.github.io/maze-game/",
        "img": "./images/icons/projects-icons/maze.png",
        "description": "This is a simple old-school maze game where the player must find their way in the maze to reach the trophy. It has three levels of difficulty and supports two players playing at the same time. The game is built using object-oriented JavaScript."
    },
    {
        "id": 4,
        "title": "CSV Visualizer Project",
        "details": "ReactJS, MongoDB, Express, NodeJS",
        "url": "https://visualizer-final.web.app/",
        "img": "./images/icons/projects-icons/visualizer.png",
        "description": "This project lets users upload a CSV file to visualize data in different charts. Users can switch between chart types, download the charts, and filter data values. Built with the MERN stack (MongoDB, Express, ReactJS, NodeJS), the backend is not currently online, but the frontend is fully functional."
    }
]
